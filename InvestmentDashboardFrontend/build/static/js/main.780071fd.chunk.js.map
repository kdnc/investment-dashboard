{"version":3,"sources":["components/navbar/NavBar.js","containers/aboutContainer/AboutContainer.js","actions/actionTypes.js","actions/investmentDataActions.js","components/shared/tables/ColumnReorderableReactTable.js","components/investmentTable/InvestmentTable.js","containers/investmentsContainer/InvestmentsContainer.js","routes/index.js","App.js","reducers/investmentsReducer.js","reducers/index.js","services/Constants.js","services/Api.js","services/InvestmentApi.js","sagas/investmentSaga.js","sagas/index.js","index.js"],"names":["INVESTMENTS_TAB_VALUE","ABOUT_TAB_VALUE","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTabChange","event","tabValue","setState","state","links","name","url","linksComponents","map","link","react_default","a","createElement","Tab_default","label","value","component","Link","to","key","exact","AppBar_default","position","Toolbar_default","Typography_default","variant","color","noWrap","className","Tabs_default","onChange","Component","AboutContainer","Card_default","CardContent_default","gutterBottom","LOAD_INVESTMENT_DATA","LOAD_INVESTMENT_DATA_LOADING","LOAD_INVESTMENT_DATA_SUCCESS","LOAD_INVESTMENT_DATA_FAILED","loadInvestmentData","pagingData","type","payload","loadingInvestmentData","loading","loadInvestmentDataSuccess","investmentData","objectSpread","loadInvestmentDataFailed","assign","ReactTableDefaults","defaultPageSize","minRows","ColumnReorderableReactTable","dragged","reorder","trigger","registerEvents","_this2","Array","prototype","slice","document","querySelectorAll","forEach","header","index","setAttribute","ondragstart","stopPropagation","ondrag","ondragend","setTimeout","ondragover","preventDefault","ondrop","push","reorderIndex","Math","random","instance","sortedTextStr","sorted","sortOption","orderingValue","desc","concat","id","join","loadPaginatedData","pageSize","pageNum","page","sortOptions","_this$props","rows","columns","cols","col","Header","reorderObject","splice","react_table_es","onFetchData","bind","data","InvestmentTable","paginatedData","pages","accessor","Cell","row","moment","format","style","shared_tables_ColumnReorderableReactTable","pageSizeOptions","manual","InvestmentsContainer","_Component","_getPrototypeOf2","_len","arguments","length","args","_key","apply","investmentDataActions","inherits","createClass","components_investmentTable_InvestmentTable","investments","connect","dispatch","bindActionCreators","routes","components_navbar_NavBar","Switch","Route","path","App","_ref","history","esm","initialState","investmentsReducer","undefined","action","TYPES","rootReducer","combineReducers","router","connectRouter","LOAD_INVESTMENTS_URL","ERROR_OCCURRED","NETWORK_REQUEST_FAILED","MAINTENANCE_ERROR","invokeJsonGet","opts","Promise","resolve","reject","fetch","then","response","ok","Error","json","errorCode","errorMessage","msg","catch","error","message","invokeApi","method","headers","Content-Type","loadInvestments","investmentDataSaga","regenerator_default","wrap","_context","prev","next","put","sent","t0","stop","_marked","_context2","takeLatest","_marked2","rootSaga","sagas_marked","__webpack_require__","d","__webpack_exports__","store","createBrowserHistory","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","ReactDOM","render","react_hot_loader","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.780071fd.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport './NavBar.css'\r\n\r\nconst INVESTMENTS_TAB_VALUE = 'investments';\r\nconst ABOUT_TAB_VALUE = 'about';\r\n\r\n/**\r\n * Nav bar component which displays on top of the page\r\n */\r\nclass NavBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabValue: INVESTMENTS_TAB_VALUE\r\n    };\r\n    this.links = [\r\n      {name: 'About', url: '/about', tabValue: ABOUT_TAB_VALUE},\r\n    ];\r\n    this.linksComponents = this.links.map((link) => {\r\n      return (\r\n        <Tab\r\n          label={link.name} value={link.tabValue} component={Link} to={link.url} key={link.tabValue} exact='true'/>\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle the tab change\r\n   * @param {object} event - Tab change event\r\n   * @param {string} tabValue - Value state of the tab\r\n   */\r\n  handleTabChange = (event, tabValue) => {\r\n    this.setState({tabValue});\r\n  };\r\n\r\n  render() {\r\n    const {tabValue} = this.state;\r\n    return (\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Typography variant='h6' color='inherit' noWrap>\r\n            Investment Dashboard\r\n          </Typography>\r\n          <div className='tabs-container'>\r\n            <Tabs value={tabValue} onChange={this.handleTabChange}>\r\n              <Tab value={INVESTMENTS_TAB_VALUE} label='Investments' component={Link} to='/' exact='true'/>\r\n              {this.linksComponents}\r\n            </Tabs>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './AboutContainer.css';\r\n\r\n/**\r\n * About tab container\r\n */\r\nconst AboutContainer = () => (\r\n  <Card className='about-card'>\r\n    <CardContent>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Notable items in the application\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Table columns can be reordered.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Table data can be sorted on multiple columns. Press 'Shift' key and click on columns to do multi column sorting.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Table data is paginated and lazy loaded with server side pagination.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Custom cell renderer is used in the table to display styled content in the cell.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        react-table did not have the column reordering functionality. So had to use a\r\n        separate Higher order component to support this functionality.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        App is designed with Material UI design.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Webpack is used as the build tool for the application.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Redux architecture has been used.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Redux saga has been used to asynchronously load data to the table.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        React router is used for the routing.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Unit tests are written using Jest.\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Backend is developed using .NET Core Web API\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Data is seeded from the backend using Entity framework, In Memory Database.\r\n      </Typography>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default AboutContainer;","export const LOAD_INVESTMENT_DATA = 'LOAD_INVESTMENT_DATA';\nexport const LOAD_INVESTMENT_DATA_LOADING = 'LOAD_INVESTMENT_DATA_LOADING';\nexport const LOAD_INVESTMENT_DATA_SUCCESS = 'LOAD_INVESTMENT_DATA_SUCCESS';\nexport const LOAD_INVESTMENT_DATA_FAILED = 'LOAD_INVESTMENT_DATA_FAILED';","import {\n  LOAD_INVESTMENT_DATA, LOAD_INVESTMENT_DATA_FAILED, LOAD_INVESTMENT_DATA_LOADING,\n  LOAD_INVESTMENT_DATA_SUCCESS\n} from './actionTypes';\n\n/**\n * Action creator for loading investment data\n * @param {object} pagingData - paging information to be used when loading investments data\n * @return {object} action object\n */\nexport function loadInvestmentData(pagingData) {\n  return {\n    type: LOAD_INVESTMENT_DATA,\n    payload: pagingData\n  }\n}\n\n/**\n * Action creator for marking investment data is loading\n * @return {object} action object\n */\nexport function loadingInvestmentData() {\n  return {\n    type: LOAD_INVESTMENT_DATA_LOADING,\n    payload: {\n      loading: true\n    }\n  }\n}\n\n/**\n * Action creator for marking investment data is loaded\n * @param {object} investmentData - loaded investment data\n * @return {object} action object\n */\nexport function loadInvestmentDataSuccess(investmentData) {\n  return {\n    type: LOAD_INVESTMENT_DATA_SUCCESS,\n    payload: {...investmentData, loading: false}\n  }\n}\n\n/**\n * Action creator for marking investment data loading failed\n * @return {object} action object\n */\nexport function loadInvestmentDataFailed() {\n  return {\n    type: LOAD_INVESTMENT_DATA_FAILED,\n    payload: {\n      loading: false\n    }\n  }\n}\n\n\n","import React, {Component} from 'react';\r\nimport ReactTable, {ReactTableDefaults} from 'react-table';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-table/react-table.css';\r\nimport './ColumnReorderableReactTable.css';\r\n\r\nObject.assign(ReactTableDefaults, {\r\n  defaultPageSize: 10,\r\n  minRows: 3\r\n});\r\n\r\n/**\r\n * Higher order component to support column reordering in react-table\r\n */\r\nclass ColumnReorderableReactTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dragged = null;\r\n    this.reorder = [];\r\n    this.state = {\r\n      trigger: 0,\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.registerEvents();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.registerEvents();\r\n  }\r\n\r\n  /**\r\n   * Register drag and drop events to support column dragging\r\n   */\r\n  registerEvents() {\r\n    const headers = Array.prototype.slice.call(\r\n      document.querySelectorAll(\".draggable-header\")\r\n    );\r\n\r\n    headers.forEach((header, index) => {\r\n      header.setAttribute(\"draggable\", true);\r\n      header.ondragstart = event => {\r\n        event.stopPropagation();\r\n        this.dragged = index;\r\n      };\r\n\r\n      header.ondrag = event => event.stopPropagation;\r\n\r\n      header.ondragend = event => {\r\n        event.stopPropagation();\r\n        setTimeout(() => (this.dragged = null), 1000);\r\n      };\r\n\r\n      header.ondragover = event => {\r\n        event.preventDefault();\r\n      };\r\n\r\n      header.ondrop = event => {\r\n        event.preventDefault();\r\n        this.reorder.push({reorderIndex: index, dragged: this.dragged});\r\n        this.setState({trigger: Math.random()});\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch data from server when pagination clicked or column is sorted or filtered\r\n   * @param {object} state - Current pagination state of the table\r\n   * @param {object} instance - Instance of the table\r\n   */\r\n  onFetchData(state, instance) {\r\n    let sortTextArr = [];\r\n    sortTextArr = state.sorted.map((sortOption) => {\r\n      const orderingValue = (sortOption.desc) ? 'desc' : 'asc';\r\n      return `${sortOption.id}_${orderingValue}`;\r\n    });\r\n    let sortedTextStr = sortTextArr.join(',');\r\n    this.props.loadPaginatedData({\r\n      pageSize: state.pageSize,\r\n      pageNum: state.page,\r\n      sortOptions: sortedTextStr\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {rows, columns, loading} = this.props;\r\n    const cols = columns.map(col => ({\r\n      ...col,\r\n      Header: <div className=\"draggable-header\">{col.Header}</div>\r\n    }));\r\n    this.reorder.forEach(\r\n      reorderObject => cols.splice(reorderObject.reorderIndex, 0, cols.splice(reorderObject.dragged, 1)[0])\r\n    );\r\n\r\n    return (\r\n      <div className=\"esr-table\">\r\n        <ReactTable {...this.props}\r\n                    onFetchData={this.onFetchData.bind(this)}\r\n                    loading={loading}\r\n                    data={rows} columns={cols}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColumnReorderableReactTable.propTypes = {\r\n  loadPaginatedData: PropTypes.func.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ColumnReorderableReactTable;","import React, {Component} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types';\r\nimport ColumnReorderableReactTable from '../shared/tables/ColumnReorderableReactTable';\r\nimport 'react-table/react-table.css';\r\nimport 'react-table-material/Table.css';\r\nimport './InvestmentTable.css';\r\n\r\n/**\r\n * Table component to display the investment data\r\n */\r\nclass InvestmentTable extends Component {\r\n\r\n  /**\r\n   * Load paginated data for the table\r\n   * @param {object} pagingData - paging information to be used when loading investments data\r\n   */\r\n  loadPaginatedData = (paginatedData) => {\r\n    this.props.loadInvestmentData(paginatedData);\r\n  };\r\n\r\n  render() {\r\n    const {data, pages, loading} = this.props;\r\n    const columns = [\r\n      {Header: \"Id\", accessor: \"id\"},\r\n      {Header: \"Investment\", accessor: \"investmentName\"},\r\n      {\r\n        Header: \"Commitment Date\",\r\n        accessor: \"commitmentDate\",\r\n        Cell: row => {\r\n          return moment(row.value).format(\"DD/MM/YYYY\");\r\n        }\r\n      },\r\n      {\r\n        Header: \"Market Value\",\r\n        accessor: \"marketValue\",\r\n        Cell: row => {\r\n          return (\r\n            <span>\r\n              <span style={{color: row.value < 6000 ? '#ff2e00' : '#57d500'}}>\r\n                &#x25cf;\r\n              </span> {`$ ${row.value}`}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <Card className='investment-details-card'>\r\n        <CardContent>\r\n          <ColumnReorderableReactTable\r\n            rows={data}\r\n            pages={pages}\r\n            columns={columns}\r\n            defaultPageSize={5}\r\n            pageSizeOptions={[5, 10, 15, 20]}\r\n            manual\r\n            loadPaginatedData={this.loadPaginatedData}\r\n            loading={loading}\r\n            className=\"-striped -highlight\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nInvestmentTable.propTypes = {\r\n  loadInvestmentData: PropTypes.func.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default InvestmentTable;","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as investmentDataActions from '../../actions/investmentDataActions'\nimport InvestmentTable from '../../components/investmentTable/InvestmentTable';\n\n/**\n * Investments tab container\n */\nexport class InvestmentsContainer extends Component {\n\n  render() {\n    return (\n      <InvestmentTable loadInvestmentData={this.loadInvestmentData}\n                       data={this.props.investments.rows}\n                       pages={this.props.investments.pages}\n                       loading={this.props.investments.loading}/>\n    );\n  };\n\n  /**\n   * Load investment data for the table\n   * @param {object} pagingData - paging information to be used when loading investments data\n   */\n  loadInvestmentData = (pagingData) => {\n    this.props.investmentDataActions.loadInvestmentData(pagingData);\n  }\n}\n\nfunction mapStateToProps(state) {\n  let {investments} = state;\n  return {investments};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    investmentDataActions: bindActionCreators(investmentDataActions, dispatch)\n  };\n}\n\nInvestmentsContainer.propTypes = {\n  investments: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InvestmentsContainer);","import React from 'react';\r\nimport {Route, Switch} from 'react-router';\r\nimport NavBar from '../components/navbar/NavBar';\r\nimport AboutContainer from '../containers/aboutContainer/AboutContainer';\r\nimport InvestmentsContainer from '../containers/investmentsContainer/InvestmentsContainer';\r\n\r\n/**\r\n * Defined routes for the application\r\n */\r\nconst routes = (\r\n  <div>\r\n    <NavBar/>\r\n    <div className={'rightContentContainer'}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={InvestmentsContainer}/>\r\n        <Route path=\"/about\" component={AboutContainer}/>\r\n      </Switch>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default routes;","import React from 'react';\nimport {ConnectedRouter} from 'connected-react-router';\nimport routes from './routes';\n\n/**\n * Router wrapped app component\n * @param {object} history - History object to be used for the router\n */\nconst App = ({history}) => {\n  return (\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  )\n};\n\nexport default App;\n","import * as TYPES from '../actions/actionTypes';\n\nconst initialState = {\n  pages: 0,\n  rows: [],\n  loading: false\n};\n\n/**\n * Reducer for the investments data\n * @param {object} state - State for the investment reducer\n * @param {object} action - Dispatched action object\n * @return {object} reducer state\n */\nfunction investmentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case TYPES.LOAD_INVESTMENT_DATA_LOADING:\n      return { ...state, ...action.payload };\n    case TYPES.LOAD_INVESTMENT_DATA_SUCCESS:\n      return { ...state, ...action.payload };\n    case TYPES.LOAD_INVESTMENT_DATA_FAILED:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default investmentsReducer;","import { connectRouter } from 'connected-react-router';\r\nimport investmentsReducer from './investmentsReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\n/**\r\n * Root reducer for the application\r\n * @param {object} history - History object to be used for the router\r\n */\r\nconst rootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  investments: investmentsReducer,\r\n});\r\n\r\nexport default rootReducer;","// export const API_URL = 'http://localhost:58667/api';\r\nexport const API_URL = 'https://investmentdashboardapi.azurewebsites.net/api';\r\n\r\nexport const LOAD_INVESTMENTS_URL = `${API_URL}/investments`;\r\n\r\n// Error messages\r\nexport const ERROR_OCCURRED = 'Error occurred.';\r\nexport const NETWORK_REQUEST_FAILED = 'Network request failed';\r\nexport const MAINTENANCE_ERROR =\r\n  'Network error occurred. Please try again later.';","import {ERROR_OCCURRED, MAINTENANCE_ERROR, NETWORK_REQUEST_FAILED} from \"./Constants\";\r\n\r\n/**\r\n * Invoke a GET request\r\n * @param {string} url - URL to invoke\r\n * @return {Promise} Promise of the API invocation\r\n */\r\nexport function invokeJsonGet(url) {\r\n  const apiHeaders = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const opts = {\r\n    method: 'GET',\r\n    headers: apiHeaders,\r\n  };\r\n  return invokeApi(url, opts);\r\n}\r\n\r\n/**\r\n * Invoke the generic API request\r\n * @param {string} url - URL to invoke\r\n * @param {object} opts - Header options to include with the request\r\n * @return {Promise} Promise of the API invocation\r\n */\r\nexport function invokeApi(url, opts) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, opts)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error('Error occurred');\r\n        }\r\n        return response;\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.errorCode !== undefined) {\r\n          if (data.errorCode === 401) {\r\n            reject({\r\n              errorCode: 401,\r\n              errorMessage: data.msg,\r\n            });\r\n          } else {\r\n            reject({\r\n              errorCode: 500,\r\n              errorMessage: data.msg,\r\n            });\r\n          }\r\n        } else {\r\n          resolve(data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        let errorMessage = ERROR_OCCURRED;\r\n        if (error.message === NETWORK_REQUEST_FAILED) {\r\n          errorMessage = MAINTENANCE_ERROR;\r\n        }\r\n        reject({\r\n          errorCode: 500,\r\n          errorMessage,\r\n        });\r\n      });\r\n  });\r\n}","import {LOAD_INVESTMENTS_URL} from './Constants';\r\nimport {invokeJsonGet} from './Api';\r\n\r\n/**\r\n * Load investment API request\r\n * @param {int} pageSize - Data set size to be retrieved\r\n * @param {int} pageNum - Page number used for retrieving data\r\n * @param {string} sortOptions - Sorting option to be used\r\n * @return {Promise} Promise of the API invocation\r\n */\r\nexport function loadInvestments(pageSize, pageNum, sortOptions) {\r\n  const url = `${LOAD_INVESTMENTS_URL}?pageSize=${pageSize}&pageNum=${pageNum}&sortOptions=${sortOptions}`;\r\n  return invokeJsonGet(url);\r\n}","import {call, put, takeLatest} from 'redux-saga/effects'\r\nimport {LOAD_INVESTMENT_DATA} from './../actions/actionTypes'\r\nimport {loadInvestments} from '../services/InvestmentApi';\r\nimport {\r\n  loadingInvestmentData, loadInvestmentDataFailed,\r\n  loadInvestmentDataSuccess\r\n} from '../actions/investmentDataActions';\r\n\r\n/**\r\n * Run the saga to load investment data\r\n * @param {object} action - Dispatched action\r\n */\r\nexport function* loadInvestmentData(action) {\r\n  try {\r\n    yield put(loadingInvestmentData());\r\n    const investmentData = yield call(loadInvestments, action.payload.pageSize, action.payload.pageNum, action.payload.sortOptions);\r\n    yield put(loadInvestmentDataSuccess(investmentData));\r\n  } catch (error) {\r\n    yield put(loadInvestmentDataFailed());\r\n  }\r\n}\r\n\r\n/**\r\n * Watch for LOAD_INVESTMENT_DATA action to run the saga\r\n */\r\nexport function* investmentDataSaga() {\r\n  yield takeLatest(LOAD_INVESTMENT_DATA, loadInvestmentData);\r\n}","import {investmentDataSaga} from './investmentSaga';\r\n\r\n/**\r\n * Root saga registered for the application\r\n */\r\nexport default function* rootSaga() {\r\n  yield [\r\n    investmentDataSaga()\r\n  ]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {AppContainer} from 'react-hot-loader';\nimport createSagaMiddleware from 'redux-saga'\nimport App from './App';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas'\nimport './assets/styles.css';\n\nconst history = createBrowserHistory();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst defaultState = {};\nconst sagaMiddleware = createSagaMiddleware()\n\n/**\n * Configure the redux store\n */\nexport const store = createStore(\n  rootReducer(history),\n  defaultState,\n  composeEnhancer(\n    applyMiddleware(\n      routerMiddleware(history),\n      sagaMiddleware\n    ),\n  ),\n);\nsagaMiddleware.run(rootSaga)\n\n/**\n * Render the Root DOM node\n */\nconst render = () => {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store}>\n        <App history={history}/>\n      </Provider>\n    </AppContainer>,\n    document.getElementById('root')\n  );\n};\n\nrender();\n"],"sourceRoot":""}